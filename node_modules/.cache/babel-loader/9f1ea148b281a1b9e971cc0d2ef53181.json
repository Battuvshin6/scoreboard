{"ast":null,"code":"var _jsxFileName = \"/Users/mstars_lab2_18/Desktop/scoreboard-class-2/src/components/Stopwatch.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stopwatch extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isRunning: false,\n      elapsedTime: 0,\n      previousTime: 0\n    };\n\n    this.tick = () => {\n      if (this.state.isRunning) {\n        const now = Date.now();\n        this.setState(prevState => ({\n          previousTime: now,\n          elapsedTime: prevState.elapsedTime + (now - prevState.previousTime)\n        }));\n      }\n    };\n\n    this.handleStopwatch = () => {\n      this.setState(prevState => ({\n        isRunning: !prevState.isRunning\n      }));\n\n      if (!this.state.isRunning) {\n        this.setState({\n          previousTime: Date.now\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  render() {\n    const millis = Math.floor(this.state.elapsedTime / 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stopwatch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stopwatch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"stopwatch-time\",\n        children: millis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStopwatch,\n        children: this.state.isRunning ? \"Stop\" : \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.resetTime,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/Users/mstars_lab2_18/Desktop/scoreboard-class-2/src/components/Stopwatch.js"],"names":["React","Stopwatch","Component","state","isRunning","elapsedTime","previousTime","tick","now","Date","setState","prevState","handleStopwatch","componentDidMount","intervalID","setInterval","componentWillUnmount","clearInterval","render","millis","Math","floor","resetTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,WAAW,EAAE,CAFP;AAGNC,MAAAA,YAAY,EAAE;AAHR,KAD8B;;AAAA,SAatCC,IAbsC,GAa/B,MAAM;AACX,UAAI,KAAKJ,KAAL,CAAWC,SAAf,EAA0B;AACxB,cAAMI,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AACA,aAAKE,QAAL,CAAeC,SAAD,KAAgB;AAC5BL,UAAAA,YAAY,EAAEE,GADc;AAE5BH,UAAAA,WAAW,EAAEM,SAAS,CAACN,WAAV,IAAyBG,GAAG,GAAGG,SAAS,CAACL,YAAzC;AAFe,SAAhB,CAAd;AAID;AACF,KArBqC;;AAAA,SA0BtCM,eA1BsC,GA0BpB,MAAM;AACtB,WAAKF,QAAL,CAAeC,SAAD,KAAgB;AAC5BP,QAAAA,SAAS,EAAE,CAACO,SAAS,CAACP;AADM,OAAhB,CAAd;;AAGA,UAAI,CAAC,KAAKD,KAAL,CAAWC,SAAhB,EAA2B;AACzB,aAAKM,QAAL,CAAc;AACZJ,UAAAA,YAAY,EAAEG,IAAI,CAACD;AADP,SAAd;AAGD;AACF,KAnCqC;AAAA;;AAOtCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM,KAAKR,IAAL,EAAP,EAAoB,GAApB,CAA7B;AACD;;AACDS,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACD;;AAwBDI,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKlB,KAAL,CAAWE,WAAX,GAAyB,GAApC,CAAf;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,kBAAkCc;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKP,eAAtB;AAAA,kBACG,KAAKT,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC;AADnC;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAQ,QAAA,OAAO,EAAE,KAAKkB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAhDqC;;AAmDxC,eAAerB,SAAf","sourcesContent":["import React from \"react\";\n\nclass Stopwatch extends React.Component {\n  state = {\n    isRunning: false,\n    elapsedTime: 0,\n    previousTime: 0,\n  };\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n  tick = () => {\n    if (this.state.isRunning) {\n      const now = Date.now();\n      this.setState((prevState) => ({\n        previousTime: now,\n        elapsedTime: prevState.elapsedTime + (now - prevState.previousTime),\n      }));\n    }\n  };\n  // resetTime = () => {\n  //   this.setState({ time: (this.state.time = 0) });\n  // };\n\n  handleStopwatch = () => {\n    this.setState((prevState) => ({\n      isRunning: !prevState.isRunning,\n    }));\n    if (!this.state.isRunning) {\n      this.setState({\n        previousTime: Date.now,\n      });\n    }\n  };\n  render() {\n    const millis = Math.floor(this.state.elapsedTime / 100);\n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">{millis}</span>\n        <button onClick={this.handleStopwatch}>\n          {this.state.isRunning ? \"Stop\" : \"Start\"}\n        </button>\n        <button onClick={this.resetTime}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/mstars_lab2_18/Desktop/scoreboard-class-2/src/components/Stopwatch.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Stopwatch extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isRunning: false,\n      time: 0\n    };\n\n    this.tick = () => {\n      if (this.state.isRunning) {\n        this.setState(prevState => ({\n          time: prevState.time += 1\n        }));\n      }\n    };\n\n    this.resetTime = () => {\n      this.setState({\n        time: this.state.time = 0\n      });\n    };\n\n    this.handleStopwatch = () => {\n      this.setState(prevState => ({\n        isRunning: !prevState.isRunning\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stopwatch\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stopwatch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"stopwatch-time\",\n        children: this.state.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleStopwatch,\n        children: this.state.isRunning ? \"Stop\" : \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.resetTime,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/Users/mstars_lab2_18/Desktop/scoreboard-class-2/src/components/Stopwatch.js"],"names":["React","Stopwatch","Component","state","isRunning","time","tick","setState","prevState","resetTime","handleStopwatch","componentDidMount","intervalID","setInterval","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,IAAI,EAAE;AAFA,KAD8B;;AAAA,SAYtCC,IAZsC,GAY/B,MAAM;AACX,UAAI,KAAKH,KAAL,CAAWC,SAAf,EAA0B;AACxB,aAAKG,QAAL,CAAeC,SAAD,KAAgB;AAC5BH,UAAAA,IAAI,EAAGG,SAAS,CAACH,IAAV,IAAkB;AADG,SAAhB,CAAd;AAGD;AACF,KAlBqC;;AAAA,SAmBtCI,SAnBsC,GAmB1B,MAAM;AAChB,WAAKF,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAG,KAAKF,KAAL,CAAWE,IAAX,GAAkB;AAA3B,OAAd;AACD,KArBqC;;AAAA,SAuBtCK,eAvBsC,GAuBpB,MAAM;AACtB,WAAKH,QAAL,CAAeC,SAAD,KAAgB;AAC5BJ,QAAAA,SAAS,EAAE,CAACI,SAAS,CAACJ;AADM,OAAhB,CAAd;AAGD,KA3BqC;AAAA;;AAMtCO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM,KAAKP,IAAL,EAAP,EAAoB,GAApB,CAA7B;AACD;;AACDQ,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKH,UAAN,CAAb;AACD;;AAiBDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,kBAAkC,KAAKb,KAAL,CAAWE;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,OAAO,EAAE,KAAKK,eAAtB;AAAA,kBACG,KAAKP,KAAL,CAAWC,SAAX,GAAuB,MAAvB,GAAgC;AADnC;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAQ,QAAA,OAAO,EAAE,KAAKK,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAvCqC;;AA0CxC,eAAeR,SAAf","sourcesContent":["import React from \"react\";\n\nclass Stopwatch extends React.Component {\n  state = {\n    isRunning: false,\n    time: 0,\n  };\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n  tick = () => {\n    if (this.state.isRunning) {\n      this.setState((prevState) => ({\n        time: (prevState.time += 1),\n      }));\n    }\n  };\n  resetTime = () => {\n    this.setState({ time: (this.state.time = 0) });\n  };\n\n  handleStopwatch = () => {\n    this.setState((prevState) => ({\n      isRunning: !prevState.isRunning,\n    }));\n  };\n  render() {\n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">{this.state.time}</span>\n        <button onClick={this.handleStopwatch}>\n          {this.state.isRunning ? \"Stop\" : \"Start\"}\n        </button>\n        <button onClick={this.resetTime}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}